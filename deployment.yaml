# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# [START cloud_sql_proxy_k8s_sa]
---
apiVersion: "v1"
kind: "ConfigMap"
metadata:
  name: "saas-app-1-config"
  namespace: "sorting-as-a-service"
  labels:
    app: "saas-app-1"
    tier: "backend"
data:
  GCLOUD_STORAGE_BUCKET: "object-storage"
  PUBSUB_TOPIC_SORT: "sorting"
  PUBSUB_TOPIC_PALINDROME: "palindrome"
  DB_HOST: "127.0.0.1"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: saas-app-1
  namespace: "sorting-as-a-service"
  labels:
    app: "saas-app-1"
    tier: "backend"
spec:
  selector:
    matchLabels:
      app: saas-app-1
      tier: "backend"
  template:
    metadata:
      labels:
        app: saas-app-1
        tier: "backend"
    spec:
      serviceAccountName: kubernetes-sa
      # [END cloud_sql_proxy_k8s_sa]
      # [START cloud_sql_proxy_k8s_secrets]
      containers:
      - name: "saas-backend"
        image: "europe-west1-docker.pkg.dev/sorting-as-a-service/sorting-as-a-service-repo/saas-backend@sha256:5b8bc6390f396e3ebd7666e26eaddc62d17fdb7f4eae510cfa64d9d51d5258f3"
        env:
        - name: "GCLOUD_STORAGE_BUCKET"
          valueFrom:
            configMapKeyRef:
              key: "GCLOUD_STORAGE_BUCKET"
              name: "saas-app-1-config-gqcm"
        - name: "PUBSUB_TOPIC_SORT"
          valueFrom:
            configMapKeyRef:
              key: "PUBSUB_TOPIC_SORT"
              name: "saas-app-1-config-gqcm"
        - name: "PUBSUB_TOPIC_PALINDROME"
          valueFrom:
            configMapKeyRef:
              key: "PUBSUB_TOPIC_PALINDROME"
              name: "saas-app-1-config-gqcm"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-creds
              key: username
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: db-creds
              key: password
        - name: DB_DATABASE
          valueFrom:
            secretKeyRef:
              name: db-creds
              key: database
        - name: "DB_HOST"
          valueFrom:
            configMapKeyRef:
              key: "DB_HOST"
              name: "saas-app-1-config-gqcm"
      # [END cloud_sql_proxy_k8s_secrets]
      # [START cloud_sql_proxy_k8s_container]
      - name: cloud-sql-proxy
        # It is recommended to use the latest version of the Cloud SQL proxy
        # Make sure to update on a regular schedule!
        image: gcr.io/cloudsql-docker/gce-proxy:1.28.0 # make sure the use the latest version
        command:
          - "/cloud_sql_proxy"

          # If connecting from a VPC-native GKE cluster, you can use the
          # following flag to have the proxy connect over private IP
          # - "-ip_address_types=PRIVATE"

          # By default, the proxy will write all logs to stderr. In some
          # environments, anything printed to stderr is consider an error. To
          # disable this behavior and write all logs to stdout (except errors
          # which will still go to stderr), use:
          - "-log_debug_stdout"

          # Replace DB_PORT with the port the proxy should listen on
          # Defaults: MySQL: 3306, Postgres: 5432, SQLServer: 1433
          - "-instances=sorting-as-a-service:europe-west1:sorting-as-a-service-dbinstance2=tcp:3306"
        securityContext:
          # The default Cloud SQL proxy image runs as the
          # "nonroot" user and group (uid: 65532) by default.
          runAsNonRoot: true
        # You should use resource requests/limits as a best practice to prevent
        # pods from consuming too many resources and affecting the execution of
        # other pods. You should adjust the following values based on what your
        # application needs. For details, see
        # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          requests:
            # The proxy's memory use scales linearly with the number of active
            # connections. Fewer open connections will use less memory. Adjust
            # this value based on your application's requirements.
            memory: "2Gi"
            # The proxy's CPU use scales linearly with the amount of IO between
            # the database and the application. Adjust this value based on your
            # application's requirements.
            cpu:    "1"
      # [END cloud_sql_proxy_k8s_container]
---
apiVersion: "autoscaling/v2beta1"
kind: "HorizontalPodAutoscaler"
metadata:
  name: "saas-app-1-hpa-270t"
  namespace: "sorting-as-a-service"
  labels:
    app: "saas-app-1"
    tier: "backend"
spec:
  scaleTargetRef:
    kind: "Deployment"
    name: "saas-app-1"
    apiVersion: "apps/v1"
  minReplicas: 1
  maxReplicas: 5
  metrics:
  - type: "Resource"
    resource:
      name: "cpu"
      targetAverageUtilization: 80